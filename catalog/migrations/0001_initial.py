# Generated by Django 2.1.3 on 2019-03-20 09:42

import catalog.models
from django.conf import settings
import django.core.files.storage
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Addresses',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('start', models.PositiveIntegerField(help_text='Start of entry from file beginnings')),
                ('word_shift', models.PositiveSmallIntegerField(help_text='Shift to Symbol existence from entry start address')),
                ('word_len', models.PositiveSmallIntegerField(help_text='Length of Symbol (or his synonym) inside context')),
                ('end_shift', models.PositiveSmallIntegerField(help_text='Shift to end of entry from start address')),
            ],
        ),
        migrations.CreateModel(
            name='Author',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('first_name', models.CharField(max_length=50)),
                ('last_name', models.CharField(max_length=100)),
                ('date_of_birth', models.DateField(blank=True, null=True)),
                ('date_of_death', models.DateField(blank=True, null=True)),
            ],
            options={
                'ordering': ['last_name', 'first_name'],
            },
        ),
        migrations.CreateModel(
            name='Book',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200)),
                ('summary', models.TextField(help_text='Enter a brief description of the book', max_length=1000)),
                ('file', models.FileField(help_text='Upload your text of book in one single file here', storage=django.core.files.storage.FileSystemStorage(location='/home/alex/code/git/Catal/WebSite/catalog/books/'), upload_to='', validators=[django.core.validators.FileExtensionValidator(['txt'])])),
                ('isbn', models.CharField(help_text='13 Character <a href="https://www.isbn-international.org/content/what-isbn">ISBN number</a>', max_length=13, null=True, verbose_name='ISBN')),
                ('author', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='catalog.Author')),
            ],
        ),
        migrations.CreateModel(
            name='Existences',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now)),
                ('book', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='symbols', related_query_name='symb', to='catalog.Book')),
                ('inserter', models.ForeignKey(on_delete=models.SET(catalog.models.get_sentinel_user), related_name='inserted', related_query_name='ins', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Genre',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Enter a book genre (e.g. Science Fiction, French Poetry etc.)', max_length=50)),
            ],
        ),
        migrations.CreateModel(
            name='Language',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text="Enter the book's natural language (e.g. Russian, English, French etc.)", max_length=50)),
            ],
        ),
        migrations.CreateModel(
            name='Symbol',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=30)),
                ('occurs_in', models.ManyToManyField(through='catalog.Existences', to='catalog.Book')),
            ],
        ),
        migrations.CreateModel(
            name='SymbolDescription',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('text', models.TextField(max_length=5000)),
                ('symbol', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='descriptions', to='catalog.Symbol')),
            ],
        ),
        migrations.AddField(
            model_name='existences',
            name='symbol',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='occurs', related_query_name='occ', to='catalog.Symbol'),
        ),
        migrations.AddField(
            model_name='book',
            name='genre',
            field=models.ManyToManyField(help_text='Select a genre for this book', to='catalog.Genre'),
        ),
        migrations.AddField(
            model_name='book',
            name='language',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='catalog.Language'),
        ),
        migrations.AddField(
            model_name='addresses',
            name='existence',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='addressees', related_query_name='adr', to='catalog.Existences'),
        ),
    ]
